{% extends 'game/index.html.twig' %}
{% block title %}Katamino Online Board Entertainment - KOBE{% endblock %}

{% block body %}
    {% include 'form/check-end.html.twig' %}
    <style>
        body {
            display: block;
            margin: auto;
            width: 500px;
            margin-top: 10px;
        }

        .square {
            width: 25px;
            height: 25px;
            display: inline-block;
            margin: 0px;
            border: solid 1px black;
        }

        #field {
            width: 250px;
            height: 250px;
            display: inline-flex;
            flex-wrap: wrap;
            margin: auto;
        }

        .row {
            display: flex;
            width: 250px;
            height: 25px;
        }

        .enabled {
            background-color: black;
        }

        .disabled {
            background-color: white;
        }

        .figuresquare {
            background-color: green;
        }

        .placedsquare {
            background-color: green;
        }

        .inventory {
            margin-top: 20px;
        }
    </style>

    {% set area = forms[0].area %}
    <div id='field'>
    </div>

    <script>
        const field = document.getElementById('field');

        const areaarr = {{ area|raw }};
        const areaobject= JSON.parse(JSON.stringify(areaarr));
        const areaarray = $.map(areaobject, function(value, index) {
            return [value];
        });
        //const areaarray = JSON.parse(JSON.stringify(areaarr));
        for (let i = 0; i < Object.keys(areaarray).length; ++i) {
            const row = document.createElement('DIV');
            row.className = 'row';
            for (let j = 0; j < Object.keys(areaarray[i]).length; ++j) {
                const square = document.createElement('DIV');
                square.className = 'square';
                square.id = i.toString() + j.toString();
                if (areaarray[i][j] === null)
                    square.classList.add('disabled');
                else
                    square.classList.add('enabled');
                row.appendChild(square);
            }
            field.appendChild(row);
        }
    </script>
    <div class="inventory" id="inventory">
        <script>
            const inv = document.getElementById("inventory")
            for (let i = 0; i < 3; ++i) {
                const row = document.createElement('DIV');
                row.className = 'row';
                for (let j = 0; j < 10; ++j) {
                    const square = document.createElement('DIV');
                    square.className = 'square figuresquare';
                    row.appendChild(square);
                }
                inv.appendChild(row);
            }
        </script>
    </div>
    <script>
        $(function () {
            $(".enabled").droppable({
                out: function () {
                    $(this).data("outside", true);
                },
                over: function () {
                    $(this).data("outside", false);
                },
                drop: function (event, ui) {
                    $(this)
                        .draggable()
                        .addClass("figuresquare")
                        .draggable("enable")
                        .css("position", "relative")
                        .droppable("disable")
                    /*rownum, colnum - where figure was dragged FROM, 2 - TO*/
                    const rownum = ui.draggable.attr("id") ? ui.draggable.attr("id").charAt(0) : null
                    const rownum2 = $(this).attr("id").charAt(0)
                    const colnum = rownum ? ui.draggable.attr("id").charAt(1) : null
                    const colnum2 = $(this).attr("id").charAt(1)
                    if (rownum) {
                        areaarray[rownum][colnum] = 0
                    }
                    areaarray[rownum2][colnum2] = 1
                    $(this).draggable({revert: true})
                    ui.draggable.removeClass("figuresquare")
                    ui.draggable.draggable("disable")
                    ui.draggable.attr("style", "")
                    ui.draggable.clone().addClass("placedsquare")
                    /*TODO: return figures to inventory when dragged outside the form
                    if (ui.draggable.parent().parent().hasClass("inventory"))
                        ui.draggable.remove()
                    else*/
                    if (!ui.draggable.parent().parent().hasClass("inventory"))
                        ui.draggable.droppable("enable")
                    let hasEmptySquares = false;
                    $.each(areaarray, function( index, value ) {
                        if (jQuery.inArray(0, value) !== -1) {
                            hasEmptySquares = true;
                            return false;
                        }
                    });

                    if (hasEmptySquares === false) {
                        $.ajax({
                            type: 'POST',
                            url: '/end-round',
                            data: { roundId: '{{ roundId }}', user: '{{ app.user }}' },
                            dataType: 'json'
                        });
                    }

                    $.ajax({
                        type: 'POST',
                        url: '/set-form',
                        data: { roundId: '{{ roundId }}', user: '{{ app.user }}', area: areaarray},
                        dataType: 'json'
                    });
                }
            });

            $(".figuresquare").draggable({
                helper: "clone"
            });
        });
    </script>
{% endblock %}